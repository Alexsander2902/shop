version: '3.3'

networks:
  elk:
    driver: bridge

volumes:
  cowrie-etc:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/credihabitar/logs/sshhoneypot/etc/
  cowrie-var:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/credihabitar/logs/sshhoneypot/var/
  webapp-log:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/credihabitar/logs/webapp/log/
  elasticsearch:

services:
  webapp:
    build:
      context: ./backend_python
      dockerfile: Dockerfile
    restart: always
    ports:
      - "20001:80"
    volumes:
      - webapp-log:/python/logs
  
  cowrie:
    image: cowrie/cowrie
#    build:
#      context: ./dir
#      dockerfile: Dockerfile
    ports:
      - "22:2222"
    volumes:
      - cowrie-etc:/cowrie/cowrie-git/etc
      - cowrie-var:/cowrie/cowrie-git/var
    restart: always
    networks:
      - elk

  filebeat:
    build:
      context: filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    networks:
      - elk
    volumes:
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /home/credihabitar/logs/sshhoneypot/var/:/cowrie
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      - /var/lib/docker/containers:/usr/share/filebeat/dockerlogs:ro

#    # https://github.com/docker/swarmkit/issues/1951
#    hostname: "{{.Node.Hostname}}-filebeat"
#    # Need to override user so we can access the log files, and docker.sock
#    user: root
#    configs:
#      - source: fb_config
#        target: /usr/share/filebeat/filebeat.yml
#    volumes:
#      - filebeat:/usr/share/filebeat/data
#      - /var/run/docker.sock:/var/run/docker.sock
#      # This is needed for filebeat to load container log path as specified in filebeat.yml
#      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
#      # # This is needed for filebeat to load jenkins build log path as specified in filebeat.yml
#      # - /var/lib/docker/volumes/jenkins_home/_data/jobs/:/var/lib/docker/volumes/jenkins_home/_data/jobs/:ro
#      # This is needed for filebeat to load logs for system and auth modules
#      - /var/log/:/var/log/:ro
#      # This is needed for filebeat to load logs for auditd module. you might have to install audit system
#      # on ubuntu first (sudo apt-get install -y auditd audispd-plugins)
#      - /var/log/audit/:/var/log/audit/:ro
#    environment:
#      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-node1}
#      - KIBANA_HOST=${KIBANA_HOST:-node1}
#      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
#      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
#    # disable strict permission checks
#    command: ["--strict.perms=false"]
#    deploy:
#      mode: global

#  elasticsearch:
#    build:
#      context: elasticsearch/
#      args:
#        ELK_VERSION: $ELK_VERSION
#    volumes:
#      - type: bind
#        source: ./elasticsearch/config/elasticsearch.yml
#        target: /usr/share/elasticsearch/config/elasticsearch.yml
#        read_only: true
#      - type: volume
#        source: elasticsearch
#        target: /usr/share/elasticsearch/data
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    environment:
#      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#      ELASTIC_PASSWORD: changeme
#      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
#      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
#      discovery.type: single-node
#    networks:
#      - elk
#
#  logstash:
#    build:
#      context: logstash/
#      args:
#        ELK_VERSION: $ELK_VERSION
#    volumes:
#      - type: bind
#        source: ./logstash/config/logstash.yml
#        target: /usr/share/logstash/config/logstash.yml
#        read_only: true
#      - type: bind
#        source: ./logstash/pipeline
#        target: /usr/share/logstash/pipeline
#        read_only: true
#    ports:
#      - "5044:5044"
#      - "5000:5000/tcp"
#      - "5000:5000/udp"
#      - "9600:9600"
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - elk
#    depends_on:
#      - elasticsearch
#
#  kibana:
#    build:
#      context: kibana/
#      args:
#        ELK_VERSION: $ELK_VERSION
#    volumes:
#      - type: bind
#        source: ./kibana/config/kibana.yml
#        target: /usr/share/kibana/config/kibana.yml
#        read_only: true
#    ports:
#      - "20002:5601"
#    networks:
#      - elk
#    depends_on:
#      - elasticsearch
  

#docker-compose exec -T elasticsearch bin/elasticsearch-setup-passwords auto --batch
#nginx para redirecionar http para https= e/ou adicionar ssl 
#(modificar para redirecionar para endere√ßo de rede docker via proxy)
  nginx:
    build:
      context: ./nginx
    ports:
      - "20003:80"

#https://gist.github.com/aedorado/62093cea33e7179dd5b68337591ac38e
#portainer/portainer-ce